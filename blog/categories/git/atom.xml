<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: git | Temple Coding]]></title>
  <link href="http://vintem.github.io/templecoding/blog/categories/git/atom.xml" rel="self"/>
  <link href="http://vintem.github.io/templecoding/"/>
  <updated>2013-09-03T10:42:11-04:00</updated>
  <id>http://vintem.github.io/templecoding/</id>
  <author>
    <name><![CDATA[Thiago Temple]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Salvando alterações inacabadas com Git]]></title>
    <link href="http://vintem.github.io/templecoding/blog/2010/11/10/salvando-alteraes-inacabadas-com-git/"/>
    <updated>2010-11-10T00:00:00-05:00</updated>
    <id>http://vintem.github.io/templecoding/blog/2010/11/10/salvando-alteraes-inacabadas-com-git</id>
    <content type="html"><![CDATA[<p>Quanto mais eu uso o Git, mais eu gosto dele. Fato.</p>

<p>Sabe quando você está no meio de uma atividade, ela não está acabada, e chega um bug que você tem que corrigir? Ai o que você faz com a sua alteração que está no meio do caminho?</p>

<p>O Git tem um comando chamado stash. O stash é uma área separada dos seus commits feita exatamente para isso, salvar modificações inacabadas. E o uso é bem simples.</p>

<p>git stash save</p>

<p>Esse comando salva as modificações do diretório de trabalho e limpa o log para o último commit.</p>

<p>Por exemplo, digamos que você tenha um projeto que você concluiu a versão 1 e está no meio do desenvolvimento da versão 2.0 e você criou um branch para isso.</p>

<p><img class="aligncenter" src="/images/2010/11/v2.png" title="v2" ></p>

<p>E então, enquanto você no meio do desenvolvimento de uma outra atividade, aparece um bug para corrigir, seu status do Git estaria mais ou menos assim:</p>

<p><img class="aligncenter" src="/images/2010/11/git_status.png" title="Git status" ></p>

<p>Você não pode fazer um commit, porque se você fizer isso o build irá quebrar, e você é muito responsável para fazer uma coisa dessas, né?. O que fazer?`</p>

<p><img class="aligncenter" src="/images/2010/11/moron.jpg" title="Moron" ></p>

<p>É ai que o git stash resolve. Com o comando git stash save você obtém como resultado:</p>

<p><img class="aligncenter" src="/images/2010/11/stash.png" title="Stash" ></p>

<p>O buffer fica limpo, você já pode fazer um checkout da versão 1.0, corrigir o bug e depois voltar para o branch da versão 2.0 e fazer um rebase da versão 1.0.</p>

<p>Quando estiver nesse ponto basta executar o comando git stash pop para resgatar suas atualizações.</p>

<p><img class="aligncenter" src="/images/2010/11/stash_pop.png" title="Stash pop" ></p>

<p>Pronto, você está no ponto onde parou. E viva o controle de versões.</p>

<p>Existem mais opções no comando stash. Eu recomendo dar uma olhada na <a href="http://www.kernel.org/pub/software/scm/git/docs/git-stash.html">documentação do git</a>.</p>
]]></content>
  </entry>
  
</feed>
